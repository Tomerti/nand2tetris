// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=load0, b=load512, c=load1024, d=load1536, e=load2048, f=load2560, g=load3072, h=load3584);
    RAM512(in=in, load=load0, address=address[0..8], out=ram0);
    RAM512(in=in, load=load512, address=address[0..8], out=ram512);
    RAM512(in=in, load=load1024, address=address[0..8], out=ram1024);
    RAM512(in=in, load=load1536, address=address[0..8], out=ram1536);
    RAM512(in=in, load=load2048, address=address[0..8], out=ram2048);
    RAM512(in=in, load=load2560, address=address[0..8], out=ram2560);
    RAM512(in=in, load=load3072, address=address[0..8], out=ram3072);
    RAM512(in=in, load=load3584, address=address[0..8], out=ram3584);
    Mux8Way16(a=ram0, b=ram512, c=ram1024, d=ram1536, e=ram2048, f=ram2560, g=ram3072, h=ram3584, sel=address[9..11], out=out);
}